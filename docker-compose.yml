version: "3.8"
services:
  api:
    image: namely/cos-python-sample:dev
    container_name: api
    entrypoint:
      - python
      - -m
      - banking_app_impl
    ports:
      - 9999:9010
    environment:
      COS_HOST: "chiefofstate"
      COS_PORT: "9000"
      APP_PORT: "9010"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  write-handler:
    image: namely/cos-python-sample:dev
    container_name: write-handler
    entrypoint:
      - python
      - -m
      - write_handler_impl
    ports:
      - 50052
    environment:
      APP_PORT: "50052"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  read-handler:
    image: namely/cos-python-sample:dev
    container_name: read-handler
    entrypoint:
      - python
      - -m
      - read_handler_impl
    ports:
      - 50053
    environment:
      APP_PORT: "50053"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  test-client:
    image: namely/cos-python-sample:dev
    container_name: test-client
    entrypoint:
      - sleep
      - infinity
    environment:
      API_HOST: api
      API_PORT: "9010"
      WRITE_HANDLER_HOST: write-handler
      WRITE_HANDLER_PORT: "50052"
      COS_HOST: chiefofstate
      COS_PORT: "9000"
    volumes:
        - ./code/test_client:/app/test_client:delegated
        - ./.local/:/app/.local/

  chiefofstate:
    image: namely/chief-of-state:0.8-beta.1
    hostname: chiefofstate
    ports:
      - 9000
      - 9102
      - 9095
      - 5266
      - 8888
    environment:
      LOG_LEVEL: "INFO"
      LOG_STYLE: "SIMPLE"
      COS_REPLICA_COUNT: 1
      COS_SERVICE_NAME: "chiefofstate"
      COS_ADDRESS: "0.0.0.0"
      COS_PORT: 9000
      COS_WRITE_SIDE_HOST: write-handler
      COS_WRITE_SIDE_PORT: 50052
      COS_DB_CREATE_TABLES: "true"
      COS_DB_USER: "postgres"
      COS_DB_PASSWORD: "changeme"
      COS_DB_HOST: "postgres"
      COS_DB_PORT: 5432
      COS_DB_DB: "postgres"
      COS_DB_SCHEMA: "public"
      COS_EVENTS_BATCH_THRESHOLD: 2
      COS_NUM_SNAPSHOTS_TO_RETAIN: 2
      COS_READ_SIDE_ENABLED: "true"
      COS_READ_SIDE_CONFIG__HOST__LOGGER_READSIDE_1: read-handler
      COS_READ_SIDE_CONFIG__PORT__LOGGER_READSIDE_1: 50053
      COS_WRITE_PERSISTED_HEADERS: "x-custom-request-uuid"
      COS_JAEGER_ENABLED: "true"
      JAEGER_SERVICE_NAME: "chiefofstate"
      JAEGER_ENDPOINT: http://tracer:14268/api/traces
      JAEGER_SAMPLER_TYPE: "const"
      JAEGER_SAMPLER_PARAM: "1"
      JAEGER_PROPAGATION: "b3"
      # COS_MIGRATIONS_INITIAL_VERSION: "1"

  postgres:
    image: postgres:9.6
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: postgres
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4:4.24
    container_name: pagdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@namely.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_SERVER_JSON_FILE: /etc/pgadmin4/pgadmin-servers.json
    ports:
      - 5050:80
    volumes:
      - ./configs/pgadmin-servers.json:/etc/pgadmin4/pgadmin-servers.json

  tracer:
    image: jaegertracing/all-in-one:1.20
    container_name: tracer
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      LOG_LEVEL: INFO
    ports:
      - 16686:16686 # frontend
      - 14268
      - 5775

  grafana:
    image: grafana/grafana
    volumes:
      - ./configs/grafana-prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
