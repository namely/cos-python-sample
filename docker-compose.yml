version: "3.8"
services:
  api:
    image: namely/cos-python-sample:dev
    container_name: api
    entrypoint:
      - python
      - -m
      - banking_app_impl
    ports:
      - 9999:9010
    environment:
      COS_HOST: "chiefofstate"
      COS_PORT: "9000"
      APP_PORT: "9010"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  write-handler:
    image: namely/cos-python-sample:dev
    container_name: write-handler
    entrypoint:
      - python
      - -m
      - write_handler_impl
    ports:
      - 50052
    environment:
      APP_PORT: "50052"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  read-handler:
    image: namely/cos-python-sample:dev
    container_name: read-handler
    entrypoint:
      - python
      - -m
      - read_handler_impl
    ports:
      - 50053
    environment:
      APP_PORT: "50053"
      TRACE_HOST: tracer
      TRACE_PORT: 5775

  test-client:
    image: namely/cos-python-sample:dev
    container_name: test-client
    entrypoint:
      - sleep
      - infinity
    environment:
      API_HOST: api
      API_PORT: "9010"
      WRITE_HANDLER_HOST: write-handler
      WRITE_HANDLER_PORT: "50052"
      COS_HOST: chiefofstate
      COS_PORT: "9000"
    volumes:
        - ./code/test_client:/app/test_client:delegated

  chiefofstate:
    image: registry.namely.land/namely/chief-of-state:dev
    container_name: chiefofstate
    hostname: chiefofstate
    depends_on:
      - postgres
    ports:
      - 9000
      - 9102
      - 9095
      - 5266
    environment:
      LOG_LEVEL: INFO
      COS_ADDRESS: "0.0.0.0"
      COS_PORT: 9000
      COS_SERVICE_NAME: "chiefofstate"
      WRITE_SIDE_HANDLER_SERVICE_HOST: write-handler
      WRITE_SIDE_HANDLER_SERVICE_PORT: 50052
      HANDLER_SERVICE_ENABLE_PROTO_VALIDATION: "false"
      JAEGER_ENABLED: "true"
      JAEGER_HOST: tracer
      JAEGER_PORT: 14268
      COS_POSTGRES_USER: "postgres"
      COS_POSTGRES_PASSWORD: "changeme"
      COS_POSTGRES_HOST: "postgres"
      COS_POSTGRES_PORT: 5432
      COS_POSTGRES_DB: "postgres"
      COS_POSTGRES_SCHEMA: "public"
      COS_EVENTS_BATCH_THRESHOLD: 2
      COS_NUM_SNAPSHOTS_TO_RETAIN: 2
      COS_READ_SIDE_ENABLED: "true"
      COS_READ_SIDE_OFFSET_DB_HOST: "postgres"
      COS_READ_SIDE_OFFSET_DB_PORT: 5432
      COS_READ_SIDE_OFFSET_DB_USER: "postgres"
      COS_READ_SIDE_OFFSET_DB_PASSWORD: "changeme"
      COS_READ_SIDE_OFFSET_DB: "postgres"
      COS_READ_SIDE_OFFSET_DB_SCHEMA: "public"
      COS_READ_SIDE_CONFIG__HOST__LOGGER_READSIDE: read-handler
      COS_READ_SIDE_CONFIG__PORT__LOGGER_READSIDE: 50053
      JAVA_OPTS: "-Dconfig.resource=docker.conf -XX:+UseG1GC"
      COS_WRITE_PERSISTED_HEADERS: "x-custom-request-uuid"
      COS_STORES_AUTO_CREATE: "true"

  postgres:
    image: postgres:9.6
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - ./configs/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  pgadmin:
    image: dpage/pgadmin4:4.24
    container_name: pagdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@namely.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_SERVER_JSON_FILE: /etc/pgadmin4/pgadmin-servers.json
    ports:
      - 5050:80
    volumes:
      - ./configs/pgadmin-servers.json:/etc/pgadmin4/pgadmin-servers.json

  tracer:
    image: jaegertracing/all-in-one:1.17
    container_name: tracer
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      LOG_LEVEL: INFO
    ports:
      - 16686:16686

  # grafana:
  #   image: grafana/grafana
  #   volumes:
  #     - ./configs/grafana-prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
  #   ports:
  #     - "3000:3000"

  # prometheus:
  #   image: prom/prometheus:v2.1.0
  #   volumes:
  #     - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #   ports:
  #     - "9090:9090"
