version: "3.8"
services:
  api:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: cos-python-sample
    entrypoint:
      - python
      - run_app.py
    ports:
      - 9010:9010
    environment:
      COS_HOST: "host.docker.internal"
      COS_PORT: "9000"
      APP_PORT: "9010"

  write-handler:
    image: cos-python-sample:latest
    entrypoint:
      - python
      - run_write_handler.py
    ports:
      - 50052:50052
    environment:
      APP_PORT: "50052"

  read-handler:
    image: cos-python-sample:latest
    entrypoint:
      - python
      - run_read_handler.py
    ports:
      - 50053:50053
    environment:
      APP_PORT: "50053"

  test-client:
    image: cos-python-sample:latest
    container_name: test-client
    working_dir: /app/client
    entrypoint:
      - sleep
      - infinity
    environment:
      API_HOST: api
      API_PORT: "9010"
      WRITE_HANDLER_HOST: write-handler
      WRITE_HANDLER_PORT: "50052"
      COS_HOST: chiefofstate
      COS_PORT: "9000"
    volumes:
      - ./code/client:/app/client

  chiefofstate:
    # image: registry.namely.land/namely/chief-of-state:master-9cff63
    image: chief-of-state:local-dev
    hostname: chiefofstate
    depends_on:
      - postgres
    ports:
      - 9000:9000
      - 9102:9102
      - 9095:9095
      - 5266:5266
    environment:
      COS_ADDRESS: "0.0.0.0"
      COS_PORT: 9000
      COS_SERVICE_NAME: "chiefofstate"
      WRITE_SIDE_HANDLER_SERVICE_HOST: write-handler
      WRITE_SIDE_HANDLER_SERVICE_PORT: 50052
      HANDLER_SERVICE_STATES_PROTO: "com.namely.protobuf.chief_of_state.samples.State"
      HANDLER_SERVICE_EVENTS_PROTOS: "com.namely.protobuf.chief_of_state.samples.AppendEvent,com.namely.protobuf.chief_of_state.samples.CreateEvent"
      TRACE_HOST: tracer
      TRACE_PORT: 14268
      NAMELY_ENV: "dev"
      TEAM_NAME: "data"
      COS_POSTGRES_USER: "postgres"
      COS_POSTGRES_PASSWORD: "changeme"
      COS_POSTGRES_HOST: "postgres"
      COS_POSTGRES_PORT: 5432
      COS_POSTGRES_DB: "postgres"
      COS_POSTGRES_SCHEMA: "public"
      COS_EVENTS_BATCH_THRESHOLD: 2
      COS_NUM_SNAPSHOTS_TO_RETAIN: 2
      COS_READ_SIDE_ENABLED: "true"
      COS_READ_SIDE_OFFSET_DB_HOST: "postgres"
      COS_READ_SIDE_OFFSET_DB_PORT: 5432
      COS_READ_SIDE_OFFSET_DB_USER: "postgres"
      COS_READ_SIDE_OFFSET_DB_PASSWORD: "changeme"
      COS_READ_SIDE_OFFSET_DB: "postgres"
      COS_READ_SIDE_OFFSET_DB_SCHEMA: "public"
      READ_SIDE_HANDLER_SERVICE_HOST: x
      READ_SIDE_HANDLER_SERVICE_PORT: 50053
      COS_READSIDE_CONFIG__HOST__LOGGER_READSIDE: read-handler
      COS_READSIDE_CONFIG__PORT__LOGGER_READSIDE: 50053
      JAVA_OPTS: "-Dconfig.resource=docker.conf"

  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: postgres
    volumes:
      - ./docker/init-db.sql/:/docker-entrypoint-initdb.d/init-db.sql:delegated
    ports:
      - "5432:5432"

  # pgadmin:
  #   image: dpage/pgadmin4:4.24
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "admin@namely.com"
  #     PGADMIN_DEFAULT_PASSWORD: "admin"
  #     PGADMIN_SERVER_JSON_FILE: /etc/pgadmin4/pgadmin-servers.json
  #   ports:
  #     - 5050:80
  #   volumes:
  #     - ./docker/pgadmin-servers.json:/etc/pgadmin4/pgadmin-servers.json

  # tracer:
  #   image: jaegertracing/all-in-one:1.17
  #   environment:
  #     COLLECTOR_ZIPKIN_HTTP_PORT: 9411
  #     LOG_LEVEL: INFO
  #   ports:
  #     - 16686:16686
  #     - 14268:14268

  # grafana:
  #   image: grafana/grafana
  #   volumes:
  #     - ./docker/grafana-prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
  #   ports:
  #     - "3000:3000"

  # prometheus:
  #   image: prom/prometheus:v2.1.0
  #   volumes:
  #     - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #   ports:
  #     - "9090:9090"
